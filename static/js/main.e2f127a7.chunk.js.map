{"version":3,"sources":["components/navbar.js","components/login.js","components/register.js","firebase/firebase.js","components/orderslist.js","components/breakfast.js","components/lunch.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","react_default","a","createElement","className","react_router_dom","exact","to","Login","props","title","for","type","name","id","placeholder","required","value","Register","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Orderlist","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","menuList","map","menu","i","item","price","Component","MenulistbreakfastDB","_this","call","state","menubreaksfast","menulunch","orders","total","submit","bind","assertThisInitialized","sumOrder","_this2","database","ref","on","snapshot","menubreakfast1","val","newStatemenubreakfast","menubreaksfast2","push","Name","Sabores","Price","Image","setState","order","concat","toConsumableArray","items","el","reduce","sum","result","_this3","breakfast","onClick","style","backgroundImage","orderslist","MenulistlunchDB","menulunch1","newStatemenulunch","menulunch2","lunch","App","navbar","react_router","path","render","login","component","Orderslist","Boolean","window","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e2f127a7.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst NavBar = () => (\n    <nav>\n        <h2 className=\"logo\">BURGUER QUEEN</h2>\n        <ul className=\"navMenu\">\n            <li><NavLink className=\"navMenuLink\" exact to=\"/\" >LogIn</NavLink></li>\n            <li><NavLink className=\"navMenuLink\" to=\"/register\" >LogOut</NavLink></li>\n            <li><NavLink className=\"navMenuLink\" to=\"/breakfast\" >Desayuno</NavLink></li>\n            <li><NavLink className=\"navMenuLink\" to=\"/lunch\" >Comida</NavLink></li>\n            <li><NavLink className=\"navMenuLink\" to=\"/orderslist\" >Orders list</NavLink></li>\n        </ul>\n    </nav>\n);\n\nexport default NavBar;","import React from 'react';\n\nconst Login = (props) => (\n    <div className=\"mainContent\">\n        <div className=\"container\">\n            <h2>{props.title}</h2>\n            <h3>Iniciar sesion</h3>\n            <div className=\"LoginImage\">\n                <div >\n            <form className=\"form\">\n                <label for=\"nya\">Nombre y Apellido: *</label>\n                <br />\n                <input className=\"form-control\" type=\"text\" name=\"nya\" id=\"nya\" placeholder=\"Nancy Rodriguez\" required />\n                <br /><br />\n                <label for=\"email\">Email: *</label>\n                <br />\n                <input className=\"form-control\" type=\"text\" name=\"email\" id=\"email\" placeholder=\"ejemplo@hotmail.com\" required />\n                <br /><br />\n                <label for=\"password\">Contraseña:</label>\n                <br/>\n                <input className=\"form-control\" type=\"password\" name=\"contraseña\" id=\"contraseña\" required />\n                <br /><br />\n                <input className=\"btn\" type=\"submit\" value=\"Enviar\" />\n            </form>\n            </div>\n            </div>\n        </div>\n    </div>\n);\n        \n\nexport default Login;\n\n","import React from 'react';\n\nconst Register = (props) => (\n    <div className=\"mainContent\">\n        <div className=\"container\">\n            <h2>{props.title}</h2>\n            <h3>Registrate</h3>\n            <div className=\"LoginImage\">\n                <div >\n                    <form className=\"form\">\n                        <label for=\"nya\">Nombre y Apellido: *</label>\n                        <br />\n                        <input className=\"form-control\" type=\"text\" name=\"nya\" id=\"regnya\" placeholder=\"Juan La Jara\" required />\n                        <br /><br />\n                        <label for=\"cargo\">Cargo: *</label>\n                        <br />\n                        <selec className=\"form-control\">\n                            <option value=\"Meserx\">Meserx</option>\n                            <option value=\"Cocinerx\">Cocinerx</option>\n\n                        </selec>\n                        <br /><br />\n                        <label for=\"email\">Email: *</label>\n                        <br />\n                        <input className=\"form-control\" type=\"text\" name=\"email\" id=\"regemail\" placeholder=\"ejemplo@hotmail.com\" required />\n                        <br /><br />\n                        <label for=\"password\">Contraseña:</label>\n                        <br />\n                        <input className=\"form-control\" type=\"password\" name=\"contraseña\" id=\"contraseña\" required />\n                        <br /><br />\n                        <input className=\"btn\" type=\"submit\" value=\"Enviar\" />\n                    </form>\n                </div>\n            </div>\n        </div>\n    </div>\n);\n\n\nexport default Register;\n\n","import * as firebase from 'firebase';\n// Add additional services that you want to use\n// require(\"firebase/database\");\n\n// Initialize Firebase\n// TODO: Replace with your project's customized code snippet\nvar firebaseConfig = {\n    apiKey: \"AIzaSyBeRiGXwr253r4Rn8-WHtiyFwM0pFO7AiQ\",\n    authDomain: \"burgerqueen-e1bce.firebaseapp.com\",\n    databaseURL: \"https://burgerqueen-e1bce.firebaseio.com\",\n    projectId: \"burgerqueen-e1bce\",\n    storageBucket: \"burgerqueen-e1bce.appspot.com\",\n    messagingSenderId: \"427123099358\",\n    appId: \"1:427123099358:web:b3f1d29d81819be5\"\n  };\nfirebase.initializeApp(firebaseConfig);\nexport default firebase;\n","import React, { Component } from 'react';\n\nexport class Orderlist extends Component{\n    render(){\n        const order = this.props.menuList.map((menu, i) => {\n            return(\n                <div>\n                    \n                    <ul key={i} className=\"list-group\">\n                        <li className=\"list-group-item d-flex justify-content-between align-items-center\">\n                            <p>{menu.item}</p>\n                            <span>{\"$\" + menu.price}</span>\n                        </li>\n                    </ul>\n                </div>\n            )\n        })\n        return(\n            order\n        )\n    }\n}\n\nexport default Orderlist;","import React, { Component } from 'react';\nimport firebase from '../firebase/firebase';\nimport Orderlist from './orderslist'\n\n// import { Link } from 'react-router-dom';\n\nclass MenulistbreakfastDB extends Component {\n    constructor() {\n        super()\n        this.state = {\n            menubreaksfast: [],\n            menulunch: [],\n            orders: [],\n            total: []\n        };\n        this.submit = this.submit.bind(this);\n        this.sumOrder = this.sumOrder.bind(this);\n    };\n    componentDidMount() {\n        const breakfastRef = firebase.database().ref('menubreakfast');\n        breakfastRef.on('value', (snapshot) => {\n            let menubreakfast1 = snapshot.val();\n            let newStatemenubreakfast = [];\n            for (let menubreaksfast2 in menubreakfast1) {\n                newStatemenubreakfast.push({\n                    Name: menubreakfast1[menubreaksfast2].Name,\n                    Sabores: menubreakfast1[menubreaksfast2].Sabores,\n                    Price: menubreakfast1[menubreaksfast2].Price,\n                    Image: menubreakfast1[menubreaksfast2].Image\n                });\n            }\n            this.setState({\n                menubreaksfast: newStatemenubreakfast\n            });\n        });\n    }\n    submit(item, price) {\n        const order = {\n            item: item,\n            price: price\n        }\n        this.setState({\n            orders: [...this.state.orders, order]\n        })\n    };\n    sumOrder () {\n        const priceArr = this.state.orders.map((el) => el.price)\n        const items = priceArr.reduce((sum, result) => {\n            return sum + result;\n        });\n        this.setState({\n            total: items\n        });\n    }\n    render() {\n\n        return (\n            <div className=\"container1\">\n                <div className='mainContent'>\n                    <div className='container'>\n                        <h3>Iniciaste sesion como: meserx</h3>\n                        <h2>¿Qué deseas ordenar?</h2>\n                    </div>\n                </div>\n                <div className=\"container2\" >{this.state.menubreaksfast.map((breakfast, i) =>\n                    <div key={i} className='menuContainer'>\n                        <button className='breakfastImage' onClick={() => {\n                            this.submit(breakfast.Name, breakfast.Price);\n                        }} type=\"submit\">\n                            <div className='breakfastImage' style={{ backgroundImage: \"url(\" + breakfast.Image + \")\" }}>\n                            </div>\n                            <div>\n                            <h5>{breakfast.Name}</h5>\n                            <h5>{breakfast.Price}</h5>\n                            </div>\n                                      \n                        </button>\n\n                    </div>\n\n                )}\n                </div>\n                <Orderlist menuList={this.state.orders} />\n                <button onClick={this.sumOrder}>\n                    <h4>Total ${this.state.total}</h4>\n                </button>\n            </div>\n        )\n    }\n}\n\nexport default MenulistbreakfastDB;\n","import React, { Component } from 'react';\nimport firebase from '../firebase/firebase';\nimport Orderlist from './orderslist'\n\n// import { Link } from 'react-router-dom';\n\nclass MenulistlunchDB extends Component {\n    constructor() {\n        super()\n        this.state = {\n            menubreaksfast: [],\n            menulunch: [],\n            orders: [],\n            total: []\n        };\n        this.submit = this.submit.bind(this);\n        this.sumOrder = this.sumOrder.bind(this);\n    };\n    componentDidMount() {\n        const lunchRef = firebase.database().ref('menulunch');\n        lunchRef.on('value', (snapshot) => {\n            let menulunch1 = snapshot.val();\n            let newStatemenulunch = [];\n            for (let menulunch2 in menulunch1) {\n                newStatemenulunch.push({\n                    Name: menulunch1[menulunch2].Name,\n                    Sabores: menulunch1[menulunch2].Sabores,\n                    Price: menulunch1[menulunch2].Price,\n                    Image: menulunch1[menulunch2].Image\n                });\n            }\n            this.setState({\n                menulunch: newStatemenulunch\n            });\n        });\n    }\n    submit(item, price) {\n        const order = {\n            item: item,\n            price: price\n        }\n        this.setState({\n            orders: [...this.state.orders, order]\n        })\n    };\n    sumOrder () {\n        const priceArr = this.state.orders.map((el) => el.price)\n        const items = priceArr.reduce((sum, result) => {\n            return sum + result;\n        });\n        this.setState({\n            total: items\n        });\n    }\n    render() {\n\n        return (\n            <div className=\"container1\">\n                <div className='mainContent'>\n                    <div className='container'>\n                        <h3>Iniciaste sesion como: meserx</h3>\n                        <h2>¿Qué deseas ordenar?</h2>\n                    </div>\n                </div>\n                <div className=\"container2\" >{this.state.menulunch.map((lunch, i) =>\n                    <div key={i} className='menuContainer'>\n                        <button className='lunchImage' onClick={() => {\n                            this.submit(lunch.Name, lunch.Price);\n                        }} type=\"submit\">\n                            <div className='lunchImage' style={{ backgroundImage: \"url(\" + lunch.Image + \")\" }}>\n                            </div>\n                            <div>\n                            <h5>{lunch.Name}</h5>\n                            <h5>{lunch.Price}</h5>\n                            </div>\n                                      \n                        </button>\n\n                    </div>\n\n                )}\n                </div>\n                <Orderlist menuList={this.state.orders} />\n                <button onClick={this.sumOrder}>\n                    <h4>Total ${this.state.total}</h4>\n                </button>\n            </div>\n        )\n    }\n}\n\nexport default MenulistlunchDB;\n","import React from 'react';\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport './App.css';\nimport Navbar from './components/navbar';\nimport Login from './components/login';\nimport Register from './components/register';\nimport MenulistbreakfastDB from './components/breakfast';\nimport MenulistlunchDB from './components/lunch';\nimport Orderslist from './components/orderslist';\n\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar title=\"Nancy ejemplo react\" />\n        <Route exact path=\"/\" render={ () => <Login title=\"BurgerQueen\" />} />\n        {/* <Home title=\"BurgerQueen\" /> */}\n        <Route path=\"/register\" component={Register} />\n        <Route path=\"/breakfast\" component={MenulistbreakfastDB} />\n        <Route path=\"/lunch\" component={MenulistlunchDB} />\n        <Route path=\"/orderslist\" component={Orderslist} />\n      </div>\n      <div>\n      </div>\n    </BrowserRouter>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}